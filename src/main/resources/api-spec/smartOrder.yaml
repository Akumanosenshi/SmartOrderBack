openapi: 3.0.3
info:
  title: API Restaurant
  description: API REST pour la gestion d’un restaurant (plats, utilisateurs, réservations, commandes)
  version: 1.0.0

servers:
  - url: http://localhost:8080/api
    description: Serveur local de développement

paths:
  /Meal:
    get:
      summary: Liste tous les plats
      tags: [Meals]
      responses:
        '200':
          description: Liste des plats
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meal'

  /auth/register:
    post:
      summary: Inscription d’un nouvel utilisateur
      tags: [Authentification]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Utilisateur inscrit avec succès

  /auth/login:
    post:
      summary: Connexion d’un utilisateur (JWT)
      tags: [Authentification]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                motDePasse:
                  type: string
      responses:
        '200':
          description: Connexion réussie (retourne un token JWT)
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /reservations:
    post:
      summary: Créer une réservation
      tags: [Reservations]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        '200':
          description: Réservation créée avec succès

  /Order:
    post:
      summary: Passer une commande
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Commande passée avec succès

components:
  schemas:
    Meal:
      type: object
      properties:
        id:
          type: string
          format: uuid
        titre:
          type: string
        categorie:
          type: string
        imageUrl:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
            type: string
        email:
          type: string
        motDePasse:
          type: string
        role:
          type: string

    Reservation:
      type: object
      properties:
        id:
          type: string
          format: uuid
        date:
          type: string
          format: date-time
        nmbrPeople:
          type: integer
        user:
          $ref: '#/components/schemas/User'

    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        user:
          $ref: '#/components/schemas/User'
        meals:
          type: array
          items:
            $ref: '#/components/schemas/Meal'
        total:
          type: number
          format: double
